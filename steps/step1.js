import { loadSVG } from "../utils.js";

let step1Container = null;
let step1Timeline = null;
let isStep1Active = false;

export async function showStep1() {
  console.log("‚úÖ showStep1 d√©clench√©");
  
  // √âviter les appels multiples
  if (isStep1Active) {
    console.log("‚ö†Ô∏è Step1 d√©j√† actif, ignor√©");
    return Promise.resolve();
  }

  // Nettoyer l'ancienne timeline imm√©diatement
  if (step1Timeline) {
    step1Timeline.kill();
    step1Timeline = null;
  }

  // Charger le SVG step1 si pas d√©j√† charg√©
  if (!step1Container) {
    step1Container = await loadSVG("./svg/step1_logoTAC.svg", "step1SVG", "graphic");
    if (!step1Container) {
      console.error("‚ùå Impossible de charger step1Container");
      return Promise.reject("SVG non charg√©");
    }
  }

  isStep1Active = true;

  // Container visible imm√©diatement
  gsap.set(step1Container, { 
    opacity: 1, 
    display: "block", 
    pointerEvents: "auto" 
  });

  // S√©lectionner les √©l√©ments sp√©cifiques
  const logo = step1Container.querySelector("#step1LogoTAC");
  const luneDebut = step1Container.querySelector("#step1luneDebut");
  const luneFin = step1Container.querySelector("#step1luneFin");
  const etoiles = step1Container.querySelectorAll("#step1Etoile circle");

  console.log("üéØ √âl√©ments trouv√©s:", { logo, luneDebut, luneFin, etoiles: etoiles.length });

  // √âtats initiaux - r√©initialisation compl√®te
  gsap.set([logo, luneDebut, luneFin], { 
    opacity: 0, 
    visibility: "visible",
    clearProps: "transform,scale,rotation"
  });
  
  gsap.set(etoiles, { 
    opacity: 0, 
    visibility: "visible",
    clearProps: "transform,scale,rotation"
  });

  // Cr√©er la nouvelle timeline
  step1Timeline = gsap.timeline({
    onComplete: () => {
      console.log("üé¨ Animation step1 termin√©e");
    }
  });

  // Animation s√©quenc√©e
  // 1. Fade-in logo + luneDebut
  if (logo && luneDebut) {
    step1Timeline.to([logo, luneDebut], { 
      opacity: 1, 
      duration: 2,
      ease: "power2.out"
    }, "start");
  }

  // 2. Fade-in des √©toiles (l√©g√®rement apr√®s)
  if (etoiles.length > 0) {
    step1Timeline.to(etoiles, { 
      opacity: 1, 
      duration: 1.5,
      ease: "power2.out",
      stagger: 0.1
    }, "start+=0.5");
  }

  // 3. Pause
  step1Timeline.to({}, { duration: 2 });

  // 4. Fade-out du logo et des √©toiles
  const elementsToFadeOut = [];
  if (logo) elementsToFadeOut.push(logo);
  if (etoiles.length > 0) elementsToFadeOut.push(...etoiles);
  
  if (elementsToFadeOut.length > 0) {
    step1Timeline.to(elementsToFadeOut, { 
      opacity: 0, 
      duration: 1.5,
      ease: "power2.in"
    }, "fadeout");
  }

  // 5. Transition lune
  if (luneDebut && luneFin) {
    step1Timeline
      .to(luneDebut, { 
        opacity: 0, 
        duration: 1,
        ease: "power2.inOut"
      }, "luneTransition")
      .to(luneFin, { 
        opacity: 1, 
        duration: 1,
        ease: "power2.inOut"
      }, "luneTransition");
  }

  console.log("‚ñ∂Ô∏è Timeline step1 d√©marr√©e");
  return Promise.resolve();
}

export function hideStep1({ soft = false } = {}) {
  console.log("üëã hideStep1 d√©clench√©", { soft });

  isStep1Active = false;

  // Arr√™ter l'animation imm√©diatement
  if (step1Timeline) {
    step1Timeline.kill();
    step1Timeline = null;
  }

  if (!step1Container) {
    return Promise.resolve();
  }

  return new Promise((resolve) => {
    if (soft) {
      // Fade out rapide, r√©solution imm√©diate
      gsap.to(step1Container, { 
        opacity: 0, 
        duration: 0.3, // Plus rapide pour up-scroll
        ease: "power2.out",
        onComplete: resolve
      });
    } else {
      // Reset complet avec nettoyage
      gsap.to(step1Container, {
        opacity: 0,
        duration: 0.5,
        ease: "power2.out",
        onComplete: () => {
          // Reset tous les √©l√©ments SVG
          const allEls = step1Container.querySelectorAll("g, path, rect, circle");
          gsap.set(allEls, { 
            opacity: 0, 
            visibility: "hidden",
            clearProps: "all" 
          });
          
          gsap.set(step1Container, { 
            display: "none",
            pointerEvents: "none"
          });
          
          console.log("üßπ Step1 compl√®tement nettoy√©");
          resolve();
        }
      });
    }
  });
}
